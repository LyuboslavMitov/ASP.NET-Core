{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,iFAAiF,OAAO,mN;;;;;;;;;;;;;;;;;;;;;ACA9C;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACC;AACK;AACE;AACE;AAenD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACV,2DAAY;gBACZ,6DAAW;aACd;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,wDAAU;aACb;YACC,SAAS,EAAE;gBACP,+DAAW;aACd;YACH,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACpBrB;AAAA;AAAA;IAAA;QACU,aAAQ,GAAG;YACd;gBACI,KAAK,EAAE,OAAO;gBACd,KAAK,EAAE,KAAK;aAEf;YACD;gBACI,KAAK,EAAE,OAAO;gBACd,KAAK,EAAE,KAAK;aACf;SAAC,CAAC;IACX,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;ACXD,0FAA0F,SAAS,IAAI,iCAAiC,4B;;;;;;;;;;;;;;;;;;;;;;;;;ACArF;AACC;AAOpD;IAGK,qBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;IALO,WAAW;QALvB,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;YAExB,SAAS,EAAE,EAAE;SAChB,CAAC;yCAI6B,+DAAW;OAH7B,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;;ACRxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t<h3>{{title}}</h3>\\r\\n\\t\\t<product-list></product-list>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t<div class=\\\"card bg-light p-3\\\">\\r\\n\\t\\t\\t<h3>\\r\\n\\t\\t\\t\\tCart\\r\\n\\t\\t\\t</h3>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http'\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from './shop/productList';\r\nimport { DataService } from './shared/dataService';\r\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductList\n  ],\n  imports: [\n      BrowserModule,\n      HttpModule\n  ],\n    providers: [\n        DataService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿export class DataService {\r\n    public products = [\r\n        {\r\n            title: \"First\",\r\n            price: 19.99\r\n\r\n        },\r\n        {\r\n            title: \"First\",\r\n            price: 19.99\r\n        }];\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<ul>\\r\\n\\t\\t<li *ngFor=\\\"let p of products\\\">{{p.title}}: {{p.price | currency:\\\"USD\\\":true}} </li>\\r\\n\\t</ul>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class ProductList {//implements OnInit {\r\n    public products;\r\n\r\n     constructor(private data: DataService) {\r\n         this.products = data.products;\r\n     }\r\n     /*ngOnInit(): void {\r\n         this.data.loadProducts()\r\n             .subscribe(() => this.products = this.data.products);\r\n     }*/\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}