{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t<h3>{{title}}</h3>\\r\\n\\t\\t<product-list></product-list>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t<div class=\\\"card bg-light p-3\\\">\\r\\n\\t\\t\\t<the-cart></the-cart>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from './shop/productList';\r\nimport { DataService } from './shared/dataService'\r\nimport { Cart } from './shop/cart.component';\r\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductList,\n      Cart\n  ],\n  imports: [\n      BrowserModule,\n      HttpModule\n  ],\n    providers: [\n        DataService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    /*public products = [\r\n        {\r\n            title: \"First\",\r\n            price: 19.99\r\n\r\n        },\r\n        {\r\n            title: \"First\",\r\n            price: 19.99\r\n        }];*/\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n    public loadProducts(): Observable<Product[]> {\r\n       return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((result: Response) => this.products = result.json())\r\n            );\r\n    }\r\n    public addToOrder(newProduct: Product) {\r\n        let item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n        if (item)\r\n        {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n            item = new OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","﻿import * as _ from 'lodash';\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date=new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.quantity * i.unitPrice));\r\n    }\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","module.exports = \"<h3>Shopping cart</h3>\\r\\n<div>Count:{{data.order.items.length}}</div>\\r\\n<div>Subtotal: {{data.order.subtotal | currency:\\\"USD\\\":true}}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n\\t\\r\\n\\t\\t<thead>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Product</td>\\r\\n\\t\\t\\t\\t<td>#</td>\\r\\n\\t\\t\\t\\t<td>$</td>\\r\\n\\t\\t\\t\\t<td>Total</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n\\t\\t\\t<td>{{o.productCategory}} - {{o.productTitle}}</td>\\r\\n\\t\\t\\t<td>{{o.quantity}} </td>\\r\\n\\t\\t\\t<td>{{o.unitPrice | currency:\\\"USD\\\":true}} </td>\\r\\n\\t\\t\\t<td>{{(o.quantity*o.unitPrice) | currency:\\\"USD\\\":true }}</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\"","﻿import { Component } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(private data: DataService) {\r\n\r\n    }\r\n}","module.exports = \".product-info img {\\r\\n\\tmax-width: 100px;\\r\\n\\tfloat:left;\\r\\n\\tmargin: 0 4px;\\r\\n\\tborder: 1px solid black;\\r\\n}\\r\\n\\r\\n.product-info .product-name{\\r\\n\\tfont-size:large;\\r\\n\\tfont-weight:bold;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t\\r\\n\\t\\t<div class=\\\"col-md-4 border rounded bg-light p-1 product-info\\\" *ngFor=\\\"let p of products\\\">\\r\\n\\t\\t\\t<img class=\\\"img-fluid\\\" src=\\\"/images/{{ p.artId }}.jpg\\\" alt=\\\"@p.Title\\\" />\\r\\n\\t\\t\\t<div class=\\\"product-name\\\">\\r\\n\\t\\t\\t\\t<h3>{{p.category}} - {{p.size}}</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t<li>Price : {{p.price | currency:\\\"USD\\\":true}}</li>\\r\\n\\t\\t\\t\\t<li>Artist: {{p.artist}}</li>\\r\\n\\t\\t\\t\\t<li>Title: {{p.title}}</li>\\r\\n\\t\\t\\t\\t<li>Description:{{p.artDescription}}</li>\\r\\n\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t<!--<ul>\\r\\n\\t\\t<li *ngFor=\\\"let p of products\\\">{{p.title}}: {{p.price | currency:\\\"USD\\\":true}} </li>\\r\\n\\t</ul>-->\\r\\n\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [\"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n    public products: Product[];\r\n\r\n     constructor(private data: DataService) {\r\n         this.products = data.products;\r\n     }\r\n     ngOnInit(): void {\r\n         this.data.loadProducts()\r\n             .subscribe(result => this.products = result);\r\n    }\r\n    public addProduct(p: Product): void {\r\n        this.data.addToOrder(p);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}